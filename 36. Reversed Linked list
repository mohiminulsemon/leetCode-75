/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = nullptr;  // This will eventually become the new head
        ListNode* current = head;  // Start with the head
        while (current != nullptr) {
            ListNode* nextNode = current->next;  // Save the next node
            current->next = prev;  // Reverse the link
            prev = current;  // Move 'prev' forward
            current = nextNode;  // Move 'current' forward
        }
        return prev;  // 'prev' is the new head
    }
};
